using System;
using System.Data;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.OleDb;

/// <summary>
/// Summary description for UserService
/// </summary>
public class UserService
{
    protected OleDbConnection Conn;
    OleDbParameter objParam;

    public UserService()
    {
        Conn = new OleDbConnection(Connect.getConnectionString());
    }
    public void UpdateUserCity(int cityID, string ID)
    {
        OleDbCommand myCmd = new OleDbCommand("UpdateUserCity", Conn);
        myCmd.CommandType = CommandType.StoredProcedure;

        objParam = myCmd.Parameters.Add("@citycode", OleDbType.Integer);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = cityID;

        objParam = myCmd.Parameters.Add("@id", OleDbType.BSTR);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = ID;


        try
        {
            Conn.Open();
            myCmd.ExecuteNonQuery();
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {

            Conn.Close();
        }

    }
    public DataSet GetUsers()
    {
        OleDbCommand myCmd = new OleDbCommand("GetAllUsers", Conn);
        myCmd.CommandType = CommandType.StoredProcedure;

        OleDbDataAdapter adapter = new OleDbDataAdapter();
        adapter.SelectCommand = myCmd;

        DataSet UsersTable = new DataSet();


        try
        {
            adapter.Fill(UsersTable, "UsersTable");
            UsersTable.Tables["UsersTable"].PrimaryKey = new DataColumn[] { UsersTable.Tables["UsersTable"].Columns["ID"] };
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return UsersTable;
    }
    public void UpdateUserDetails(UserDetails US)
    {
        OleDbCommand myCmd = new OleDbCommand("UpdateUser", Conn);
        myCmd.CommandType = CommandType.StoredProcedure;

        objParam = myCmd.Parameters.Add("@firstname", OleDbType.BSTR);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = US.FirstName;

        objParam = myCmd.Parameters.Add("@lastname", OleDbType.BSTR);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = US.LastName;

        objParam = myCmd.Parameters.Add("@password", OleDbType.BSTR);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = US.Password;

        objParam = myCmd.Parameters.Add("@citycode", OleDbType.Integer);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = US.CityCode;

        objParam = myCmd.Parameters.Add("@id", OleDbType.BSTR);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = US.ID;

        try
        {
            Conn.Open();
            myCmd.ExecuteNonQuery();
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {

            Conn.Close();
        }
    }

    public UserDetails GetUser(string userID)
    {
        UserDetails user = new UserDetails();
        OleDbCommand myCmd = new OleDbCommand("GetUserByID", Conn);
        myCmd.CommandType = CommandType.StoredProcedure;

        objParam = myCmd.Parameters.Add("@ID", OleDbType.BSTR);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = userID;

        try
        {
            Conn.Open();
            OleDbDataReader DataReader = myCmd.ExecuteReader();
            user.ID = userID;

            DataReader.Read();
            user.FirstName = DataReader["FirstName"].ToString();
            user.LastName = DataReader["LastName"].ToString();
            user.Password = DataReader["Password"].ToString();
            user.CityCode = (int)DataReader["CityCode"];
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {
            Conn.Close();
        }
        return user;
    }

    public int SelectCount()
    {
        OleDbCommand myCmd = new OleDbCommand("SelectCount", Conn);
        myCmd.CommandType = CommandType.StoredProcedure;

        object obj = null;
        try
        {
            Conn.Open();
            obj = myCmd.ExecuteScalar();
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {
            Conn.Close();
        }
        if (obj == null)
            return -1;
        return (int)obj;
    }

    public void DeleteUser(string userID)
    {
        OleDbCommand myCmd = new OleDbCommand("DeleteUser", Conn);
        myCmd.CommandType = CommandType.StoredProcedure;

        objParam = myCmd.Parameters.Add("@id", OleDbType.BSTR);
        objParam.Direction = ParameterDirection.Input;
        objParam.Value = userID;

        try
        {
            Conn.Open();
            myCmd.ExecuteNonQuery();
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {

            Conn.Close();
        }
    }
}
